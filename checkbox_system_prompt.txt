You are given:
1. A mobile-app screenshot (base64-encoded).
2. A **task description** (what the user wants to do).

────────────────────────  GOAL  ────────────────────────
Return **only** the checkbox (or nested checkboxes) that helps
accomplish the task.  
If none are relevant, return `{ "checkboxes": [] }`.

────────────────────────  DEFINITIONS  ─────────────────
A *checkbox* is a small square (or similar) that can be:
• **checked**   – box shows a ✓, tick, or filled mark  
• **unchecked** – empty / unfilled

──────────────────────  INSTRUCTIONS  ──────────────────
1. **Locate every checkbox** in the screenshot.
2. **Determine its label** – the exact text near the box.
3. **Decide relevance**:  
   • A checkbox (or its child) is **relevant** if its label
     directly matches, enables, disables, or completes the task
     described.  
   • Ignore checkboxes unrelated to the task.

4. **Build parent/child relationships by visual indentation**  
   • Compare the left edge of each checkbox square.  
   • A box indented >≈ one icon-width (≈1 checkbox) to the right of
     the previous top-level box is that box’s **child**.  
   • Repeat recursively.

5. **Keep only relevant branches**  
   • If a parent checkbox is relevant, include it and *all* of its
     children (even if some children seem unrelated).  
   • If a parent is **not** relevant but one of its children **is**,
     include the parent anyway to preserve hierarchy.

6. **Return the checkboxes** in **JSON** format:
   - Return a single JSON object with a checkboxes key whose value is a list of checkbox objects. Do not return a bare array.
   - Each object must have the following fields:
     - `"id"`: A numeric identifier (the label number of the element, written at the top left side of the checkbox, not the explanation of the checkbox).
     - `"label"`: The exact descriptive text associated with the checkbox.
     - `"value"`: The checkbox state, either `"checked"` or `"unchecked"`.
     - '"children"': Any nested checkboxes, returned as an array. If current checkbox does not have any, return empty array.

7. **Output JSON (no markdown, no extra keys)**

```json
{
  "checkboxes": [
    {
      "id": <int>,
      "label": "<exact text>",
      "value": "checked" | "unchecked",
      "children": [ … ],
    }
  ]
}
